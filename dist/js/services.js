function toggleClass(e,t){return-1!==e.className.indexOf(t)?e.className=e.className.replace(t,""):e.className=e.className.replace(/\s+/g," ")+" "+t,e}function toggleDisplay(e){const t=e.style.display;e.style.display="none"===t||""===t?"block":"none"}function toggleMenuDisplay(e){const t=e.currentTarget.parentNode,n=t.querySelector(".menu"),o=t.querySelector(".fa-angle-right");n.classList.remove("hided"),toggleClass(n,"menu--hide"),toggleClass(o,"rotate-90")}function handleOptionSelected(e){toggleClass(e.target.parentNode,"menu--hide");e.target.id;const t=e.target.textContent+" ",n=document.querySelector(".dropdown .title"),o=document.querySelector(".dropdown .title .fa");n.textContent=t,n.appendChild(o),document.querySelector(".dropdown .title").dispatchEvent(new Event("change"))}const dropdownTitle=document.querySelector(".dropdown .title"),dropdownOptions=document.querySelectorAll(".dropdown .option");function setupTabs(){document.querySelectorAll(".tabs__btn").forEach((e=>{e.addEventListener("click",(()=>{const t=e.parentElement,n=t.parentElement.parentElement,o=e.dataset.forTab,a=n.querySelector(`.tabs__content[data-tab="${o}"]`);t.querySelectorAll(".tabs__btn").forEach((e=>{e.classList.remove("tabs__btn--active")})),n.querySelectorAll(".tabs__content").forEach((e=>{e.classList.remove("tabs__content--active")})),e.classList.add("tabs__btn--active"),a.classList.add("tabs__content--active")}))}))}dropdownTitle.addEventListener("click",toggleMenuDisplay),dropdownOptions.forEach((e=>e.addEventListener("click",handleOptionSelected))),document.addEventListener("DOMContentLoaded",(()=>{setupTabs(),document.querySelectorAll(".tabs").forEach((e=>{e.querySelector(".tabs__bar .tabs__btn").click()}))})),FB.api("/112073617808584","GET",{fields:"images"},(function(e){console.log(e)}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
